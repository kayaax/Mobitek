@inject IThemeContext themeContext
@inject IPageHeadBuilder pagebuilder
@{
    Layout = "_Root.Head";

    var themeName = themeContext.WorkingThemeName;

    pagebuilder.AppendCssFileParts(ResourceLocation.Head, string.Format("~/Themes/{0}/Content/css/swiper.min.css", themeName));
    pagebuilder.AppendScriptParts(ResourceLocation.Footer, string.Format("~/Themes/{0}/Content/js/header.js", themeName));
    pagebuilder.AppendScriptParts(ResourceLocation.Footer, string.Format("~/Themes/{0}/Content/js/swiper.min.js", themeName));
}
@await Component.InvokeAsync("Widget", new { widgetZone = "body_start_html_tag_after" })
<partial name="_Notifications" />
<partial name="_JavaScriptDisabledWarning" />
<partial name="_OldInternetExplorerWarning" />
<main class="c-offcanvas-content-wrap">
    <partial name="Header" />
    @await Component.InvokeAsync("SearchBox")
    @await Component.InvokeAsync("Widget", new { widgetZone = "content_before" })
    @if (IsSectionDefined("Breadcrumb"))
    {
        @RenderSection("Breadcrumb")
    }
    @RenderBody()
    @await Component.InvokeAsync("Widget", new { widgetZone = "content_after" })
    @await Component.InvokeAsync("Footer")
    <div class="backdrop-menu"></div>
</main>
<aside class="js-offcanvas" data-offcanvas-options='{"modifiers":"right,overlay","modal":true,"resize":false}' id="user_panel">
    <div class="user-panel">
        <div class="user-panel-head">
            <span>@T("Account.MyAccount")</span>
            <div class="common-close" onclick="closeOffcanvas()">
                <span></span>
            </div>
        </div>
        <ul class="user-panel-content">
            <li class="selectors-container mb-3">
                @await Component.InvokeAsync("TaxTypeSelector")
                @await Component.InvokeAsync("CurrencySelector")
                @await Component.InvokeAsync("LanguageSelector")
                @await Component.InvokeAsync("StoreSelector")
            </li>
            @await Component.InvokeAsync("Widget", new { widgetZone = "header_selectors" })
            @await Component.InvokeAsync("HeaderLinks")
        </ul>
    </div>
</aside>
<aside class="js-offcanvas" data-offcanvas-options='{"modifiers":"left,overlay","modal":true,"resize":false}' id="mobile_menu">
    <div class="navbar-collapse container"></div>
</aside>
@await Component.InvokeAsync("FlyoutShoppingCart")
<!-- Search Modal -->
<div class="modal fade" id="searchModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
        </div>
    </div>
</div>
<script asp-location="Footer">
    AjaxCart.init('.cart-qty', '.wishlist-qty', '.flyout-cart');
</script>
@await Component.InvokeAsync("EuCookieLaw")
@await Component.InvokeAsync("Widget", new { widgetZone = "body_end_html_tag_before" })